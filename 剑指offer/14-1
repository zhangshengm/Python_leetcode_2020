class Solution:
    def cuttingRope(self, n: int) -> int:
        if n<=3:
            return n-1
        s1={}
        #已经至少保证为两段了，这几个为基本单位
        s1[0]=0
        s1[1]=1
        s1[2]=2
        s1[3]=3
        #长度从4取到n
        for i in range(4,n+1):
            max=0
            #j从1取到i/2+1
            for j in range(1,int(i/2)+1):
                temp=s1[j]*s1[i-j]
                if temp >max:
                    max=temp
            s1[i]=max
        return s1[n]
        
class Solution:
    def cuttingRope(self, n: int) -> int:
        if n<=3:
            return n-1
        #把绳子尽可能切分成每段长度为3的段数，能取得最大值
        b=n%3
        #刚好分成3的整数段
        if b==0:
            return 3**(int(n/3))
        #一个3+1分成2*2
        elif b==1:
            return 3**(int(n/3)-1)*2*2
        #直接乘以余数
        else:
              return 3**(int(n/3))*2
